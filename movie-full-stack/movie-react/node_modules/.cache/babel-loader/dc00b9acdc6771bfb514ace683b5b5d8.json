{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seanr\\\\seanrichter.github.io\\\\movie-full-stack\\\\movie-react\\\\src\\\\components\\\\Movies.js\";\nimport React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport { Button, Jumbotron, Col, Row, Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Input, TextArea } from \"./forms/formfields\";\nimport \"./Movies.css\";\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      title: \"\",\n      director: \"\",\n      year: \"\",\n      imageUrl: \"\",\n      synopsis: \"\"\n    };\n\n    this.loadMovies = () => {\n      API.getMovies().then(res => {\n        this.setState({\n          movies: res.data,\n          title: \"\",\n          director: \"\",\n          year: \"\",\n          imageUrl: \"\",\n          synopsis: \"\"\n        });\n        console.log(this.state.movies);\n      }).catch(err => console.log(err));\n    };\n\n    this.deleteMovie = id => {\n      console.log(id);\n      API.deleteMovie(id).then(res => this.loadMovies()).catch(err => console.log(err));\n    };\n\n    this.handleInputChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n      console.log(this.state);\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.title && this.state.director && this.state.year) {\n        API.saveMovie({\n          title: this.state.title,\n          director: this.state.director,\n          year: this.state.year,\n          imageUrl: this.state.imageUrl,\n          synopsis: this.state.synopsis\n        }).then(res => this.loadMovies()).catch(err => console.log(err));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.loadMovies();\n  }\n\n  render() {\n    const pStyle = {\n      fontSize: '15px',\n      textAlign: 'center'\n    };\n    return React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Col, {\n      size: \"md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"What Movies Do I Like To Watch?\")), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Input, {\n      value: this.state.title,\n      onChange: this.handleInputChange,\n      name: \"title\",\n      placeholder: \"Title (required)\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Input, {\n      value: this.state.director,\n      onChange: this.handleInputChange,\n      name: \"director\",\n      placeholder: \"Director (required)\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Input, {\n      value: this.state.year,\n      onChange: this.handleInputChange,\n      name: \"year\",\n      placeholder: \"Year (required)\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Input, {\n      value: this.state.imageUrl,\n      onChange: this.handleInputChange,\n      name: \"imageUrl\",\n      placeholder: \"Image Url (optional)\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      value: this.state.synopsis,\n      onChange: this.handleInputChange,\n      name: \"synopsis\",\n      placeholder: \"Synopsis (Optional)\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(Button, {\n      disabled: !(this.state.director && this.state.title && this.state.year),\n      onClick: this.handleFormSubmit,\n      variant: \"success\",\n      className: \"btn-align-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Submit Movie\"))), React.createElement(Col, {\n      size: \"md-6 sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"These are already on my list\")), this.state.movies.length ? React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, this.state.movies.map(movie => React.createElement(\"li\", {\n      className: \"list-group-item\",\n      key: movie._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/movie/\" + movie._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, movie.title), React.createElement(Button, {\n      variant: \"danger\",\n      size: \"sm\",\n      className: \"btn-align-right\",\n      onClick: () => this.deleteMovie(movie._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"x\")))) : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"No Results to Display\"))));\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["C:/Users/seanr/seanrichter.github.io/movie-full-stack/movie-react/src/components/Movies.js"],"names":["React","Component","API","Button","Jumbotron","Col","Row","Container","Link","Input","TextArea","Movies","state","movies","title","director","year","imageUrl","synopsis","loadMovies","getMovies","then","res","setState","data","console","log","catch","err","deleteMovie","id","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","saveMovie","componentDidMount","render","pStyle","fontSize","textAlign","length","map","movie","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAAQC,MAAR,EAAeC,SAAf,EAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,SAApC,QAAqD,iBAArD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAAQC,KAAR,EAAcC,QAAd,QAA6B,oBAA7B;AACA,OAAO,cAAP;;AAEA,MAAMC,MAAN,SAAqBV,SAArB,CAA8B;AAAA;AAAA;AAAA,SAE1BW,KAF0B,GAElB;AAEJC,MAAAA,MAAM,EAAC,EAFH;AAGJC,MAAAA,KAAK,EAAC,EAHF;AAIJC,MAAAA,QAAQ,EAAE,EAJN;AAKJC,MAAAA,IAAI,EAAE,EALF;AAMJC,MAAAA,QAAQ,EAAE,EANN;AAOJC,MAAAA,QAAQ,EAAE;AAPN,KAFkB;;AAAA,SAiB1BC,UAjB0B,GAiBb,MAAM;AAEfjB,MAAAA,GAAG,CAACkB,SAAJ,GACCC,IADD,CACMC,GAAG,IAAI;AACT,aAAKC,QAAL,CAAc;AAAEV,UAAAA,MAAM,EAAES,GAAG,CAACE,IAAd;AAAoBV,UAAAA,KAAK,EAAE,EAA3B;AAA+BC,UAAAA,QAAQ,EAAE,EAAzC;AAA6CC,UAAAA,IAAI,EAAE,EAAnD;AAAuDC,UAAAA,QAAQ,EAAC,EAAhE;AAAqEC,UAAAA,QAAQ,EAAE;AAA/E,SAAd;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWC,MAAvB;AACC,OAJL,EAMCc,KAND,CAMOC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CANd;AAOH,KA1ByB;;AAAA,SA6B1BC,WA7B0B,GA6BZC,EAAE,IAAI;AAClBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,EAAZ;AACA5B,MAAAA,GAAG,CAAC2B,WAAJ,CAAgBC,EAAhB,EACET,IADF,CACOC,GAAG,IAAI,KAAKH,UAAL,EADd,EAEEQ,KAFF,CAEQC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAFf;AAGD,KAlCyB;;AAAA,SAoC1BG,iBApC0B,GAoCNC,KAAK,IAAI;AAAA,4BACHA,KAAK,CAACC,MADH;AAAA,YACnBC,IADmB,iBACnBA,IADmB;AAAA,YACbC,KADa,iBACbA,KADa;AAE3B,WAAKZ,QAAL,CAAc;AACZ,SAACW,IAAD,GAAQC;AADI,OAAd;AAGAV,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAjB;AACD,KA1CyB;;AAAA,SA4C1BwB,gBA5C0B,GA4CPJ,KAAK,IAAI;AAC1BA,MAAAA,KAAK,CAACK,cAAN;;AACA,UAAI,KAAKzB,KAAL,CAAWE,KAAX,IAAoB,KAAKF,KAAL,CAAWG,QAA/B,IAA2C,KAAKH,KAAL,CAAWI,IAA1D,EAAgE;AAC9Dd,QAAAA,GAAG,CAACoC,SAAJ,CAAc;AACZxB,UAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KADN;AAEZC,UAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG,QAFT;AAGZC,UAAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWI,IAHL;AAIZC,UAAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWK,QAJT;AAKZC,UAAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWM;AALT,SAAd,EAOGG,IAPH,CAOQC,GAAG,IAAI,KAAKH,UAAL,EAPf,EAQGQ,KARH,CAQSC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CARhB;AASD;AACF,KAzDyB;AAAA;;AAa1BW,EAAAA,iBAAiB,GAAE;AACf,SAAKpB,UAAL;AACH;;AA6CDqB,EAAAA,MAAM,GAAE;AAEN,UAAMC,MAAM,GAAG;AACbC,MAAAA,QAAQ,EAAE,MADG;AAEbC,MAAAA,SAAS,EAAE;AAFE,KAAf;AAKE,WACI,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWE,KADpB;AAEE,MAAA,QAAQ,EAAE,KAAKiB,iBAFjB;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,WAAW,EAAC,kBAJd;AAKE,MAAA,SAAS,EAAC,cALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWG,QADpB;AAEE,MAAA,QAAQ,EAAE,KAAKgB,iBAFjB;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,WAAW,EAAC,qBAJd;AAKE,MAAA,SAAS,EAAC,cALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EAeE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWI,IADpB;AAEE,MAAA,QAAQ,EAAE,KAAKe,iBAFjB;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,WAAW,EAAC,iBAJd;AAKE,MAAA,SAAS,EAAC,cALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,EAsBG,oBAAC,KAAD;AACC,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWK,QADnB;AAEC,MAAA,QAAQ,EAAE,KAAKc,iBAFhB;AAGC,MAAA,IAAI,EAAC,UAHN;AAIC,MAAA,WAAW,EAAC,sBAJb;AAKC,MAAA,SAAS,EAAC,cALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBH,EA6BE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWM,QADpB;AAEE,MAAA,QAAQ,EAAE,KAAKa,iBAFjB;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,WAAW,EAAC,qBAJd;AAKE,MAAA,SAAS,EAAC,cALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BF,EAoCE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,EAAE,KAAKnB,KAAL,CAAWG,QAAX,IAAuB,KAAKH,KAAL,CAAWE,KAAlC,IAA2C,KAAKF,KAAL,CAAWI,IAAxD,CAAlB;AAAiF,MAAA,OAAO,EAAE,KAAKoB,gBAA/F;AAAiH,MAAA,OAAO,EAAC,SAAzH;AAAmI,MAAA,SAAS,EAAC,iBAA7I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBApCF,CAJF,CADF,EA4CE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,CADF,EAIG,KAAKxB,KAAL,CAAWC,MAAX,CAAkB+B,MAAlB,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKhC,KAAL,CAAWC,MAAX,CAAkBgC,GAAlB,CAAsBC,KAAK,IAC1B;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAgC,MAAA,GAAG,EAAEA,KAAK,CAACC,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,YAAYD,KAAK,CAACC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCD,KAAK,CAAChC,KADP,CADH,EAIG,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,QAAhB;AAAyB,MAAA,IAAI,EAAC,IAA9B;AAAmC,MAAA,SAAS,EAAC,iBAA7C;AAA+D,MAAA,OAAO,EAAE,MAAM,KAAKe,WAAL,CAAiBiB,KAAK,CAACC,GAAvB,CAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJH,CADD,CADH,CADD,GAaC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAjBJ,CA5CF,CADA,CADJ;AAsEH;;AAzIyB;;AA4I9B,eAAepC,MAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport API from \"../utils/API\";\r\nimport {Button,Jumbotron, Col, Row, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {Input,TextArea} from \"./forms/formfields\";\r\nimport \"./Movies.css\";\r\n\r\nclass Movies extends Component{\r\n\r\n    state = {\r\n\r\n        movies:[],\r\n        title:\"\",\r\n        director: \"\",\r\n        year: \"\",\r\n        imageUrl: \"\",\r\n        synopsis: \"\"\r\n\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.loadMovies();\r\n    }\r\n\r\n    loadMovies = () => {\r\n        \r\n        API.getMovies()\r\n        .then(res => {\r\n            this.setState({ movies: res.data, title: \"\", director: \"\", year: \"\", imageUrl:\"\" , synopsis: \"\" })\r\n            console.log(this.state.movies);\r\n            }\r\n          )\r\n        .catch(err => console.log(err));\r\n    };\r\n    \r\n\r\n    deleteMovie = id => {\r\n      console.log(id);\r\n      API.deleteMovie(id)\r\n       .then(res => this.loadMovies())\r\n       .catch(err => console.log(err));\r\n    };\r\n  \r\n    handleInputChange = event => {\r\n      const { name, value } = event.target;\r\n      this.setState({\r\n        [name]: value\r\n      });\r\n      console.log(this.state);\r\n    };\r\n  \r\n    handleFormSubmit = event => {\r\n      event.preventDefault();\r\n      if (this.state.title && this.state.director && this.state.year) {\r\n        API.saveMovie({\r\n          title: this.state.title,\r\n          director: this.state.director,\r\n          year: this.state.year,\r\n          imageUrl: this.state.imageUrl,\r\n          synopsis: this.state.synopsis\r\n        })\r\n          .then(res => this.loadMovies())\r\n          .catch(err => console.log(err));\r\n      }\r\n    };\r\n\r\n\r\n    render(){\r\n       \r\n      const pStyle = {\r\n        fontSize: '15px',\r\n        textAlign: 'center'\r\n      };\r\n\r\n        return(\r\n            <Container fluid>\r\n            <Row>\r\n              <Col size=\"md-6\">\r\n                <Jumbotron>\r\n                  <h1>What Movies Do I Like To Watch?</h1>\r\n                </Jumbotron>\r\n                <form>\r\n                  <Input\r\n                    value={this.state.title}\r\n                    onChange={this.handleInputChange}\r\n                    name=\"title\"\r\n                    placeholder=\"Title (required)\"\r\n                    className=\"form-control\"\r\n                  />\r\n                  <Input\r\n                    value={this.state.director}\r\n                    onChange={this.handleInputChange}\r\n                    name=\"director\"\r\n                    placeholder=\"Director (required)\"\r\n                    className=\"form-control\"\r\n                  />\r\n                  <Input\r\n                    value={this.state.year}\r\n                    onChange={this.handleInputChange}\r\n                    name=\"year\"\r\n                    placeholder=\"Year (required)\"\r\n                    className=\"form-control\"\r\n                  />\r\n                   <Input\r\n                    value={this.state.imageUrl}\r\n                    onChange={this.handleInputChange}\r\n                    name=\"imageUrl\"\r\n                    placeholder=\"Image Url (optional)\"\r\n                    className=\"form-control\"\r\n                  />\r\n                  <TextArea\r\n                    value={this.state.synopsis}\r\n                    onChange={this.handleInputChange}\r\n                    name=\"synopsis\"\r\n                    placeholder=\"Synopsis (Optional)\"\r\n                    className=\"form-control\"\r\n                  />\r\n                  <Button disabled={!(this.state.director && this.state.title && this.state.year)} onClick={this.handleFormSubmit} variant=\"success\" className=\"btn-align-right\">Submit Movie</Button>\r\n                </form>\r\n              </Col>  \r\n              <Col size=\"md-6 sm-12\">\r\n                <Jumbotron>\r\n                  <h1>These are already on my list</h1>\r\n                </Jumbotron>\r\n                {this.state.movies.length ? (\r\n                  <ul>\r\n                    {this.state.movies.map(movie => (\r\n                      <li className=\"list-group-item\" key={movie._id}>\r\n                         <Link to={\"/movie/\" + movie._id}>\r\n                         {movie.title}\r\n                         </Link>\r\n                         <Button variant=\"danger\" size=\"sm\" className=\"btn-align-right\" onClick={() => this.deleteMovie(movie._id)}>x</Button>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                 \r\n                ) : (\r\n                  <h3>No Results to Display</h3>\r\n                )}\r\n              </Col>\r\n           \r\n            </Row>\r\n          </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Movies;"]},"metadata":{},"sourceType":"module"}